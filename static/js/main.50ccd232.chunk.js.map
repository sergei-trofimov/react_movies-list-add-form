{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","imgUrlError","imdbUrlError","handleChange","event","target","name","value","setState","handleSubmit","regex","test","newMovie","props","onAdd","this","onSubmit","preventDefault","type","onChange","autoComplete","required","classNames","error","disabled","Component","App","moviesFromServer","addMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.50ccd232.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport './NewMovie.scss';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    imgUrlError: false,\n    imdbUrlError: false,\n  };\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleSubmit = () => {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state;\n\n    /* eslint-disable */\n    const regex = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n    /* eslint-enable */\n\n    if (!regex.test(imgUrl)) {\n      this.setState({ imgUrlError: true });\n\n      return;\n    }\n\n    this.setState({ imgUrlError: false });\n\n    if (!regex.test(imdbUrl)) {\n      this.setState({ imdbUrlError: true });\n\n      return;\n    }\n\n    this.setState({ imdbUrlError: false });\n\n    const newMovie = {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n\n    this.props.onAdd(newMovie);\n  }\n\n  render() {\n    const { state, handleSubmit } = this;\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      imgUrlError,\n      imdbUrlError,\n    } = state;\n\n    return (\n      <form onSubmit={(event) => {\n        event.preventDefault();\n        handleSubmit();\n      }}\n      >\n        <h3>Add a new film</h3>\n        <label>\n          Title:\n          <input\n            type=\"text\"\n            name=\"title\"\n            value={title}\n            onChange={this.handleChange}\n            autoComplete=\"off\"\n            required\n          />\n        </label>\n        <label>\n          Description:\n          <textarea\n            type=\"text\"\n            name=\"description\"\n            value={description}\n            onChange={this.handleChange}\n            autoComplete=\"off\"\n          />\n        </label>\n        <label>\n          imgUrl:\n          <input\n            className={classNames({\n              error: imgUrlError === true,\n            })}\n            type=\"text\"\n            name=\"imgUrl\"\n            value={imgUrl}\n            onChange={this.handleChange}\n            autoComplete=\"off\"\n            required\n          />\n        </label>\n        <label>\n          imdbUrl:\n          <input\n            className={classNames({\n              error: imdbUrlError === true,\n            })}\n            type=\"text\"\n            name=\"imdbUrl\"\n            value={imdbUrl}\n            onChange={this.handleChange}\n            autoComplete=\"off\"\n            required\n          />\n        </label>\n        <label>\n          imdbId:\n          <input\n            type=\"text\"\n            name=\"imdbId\"\n            value={imdbId}\n            onChange={this.handleChange}\n            autoComplete=\"off\"\n            required\n          />\n        </label>\n        <button\n          type=\"submit\"\n          disabled={imgUrlError || imdbUrlError}\n        >\n          Add\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(state => ({\n      movies: [...state.movies, movie],\n    }));\n  };\n\n  render() {\n    const { state, addMovie } = this;\n    const { movies } = state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}